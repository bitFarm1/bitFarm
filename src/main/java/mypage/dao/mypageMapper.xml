<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mypageSQL">
	
	<!--쿠폰  -->
	<select id = "getCouponList" resultType = "mypageCouponDTO" parameterType="String">
		select * from coupon where coupon_user_id = #{id}
	</select>
	
	<select id = "getCouponTotal" resultType = "int" parameterType="String">
		select count(*) from coupon where coupon_user_id = #{id}
	</select>
	
	<!--적립금  -->
	<select id = "getPointList" resultType = "mypagePointDTO" parameterType="String">
		select * from point where point_user_id = #{id}
	</select>
	
	<select id = "getPointTotal" resultType = "int" parameterType="String">
		select sum(point_price) from point where point_user_id = #{id}
	</select> 

	<insert id = "writeCoupon" parameterType = "String"> 
		insert into coupon values(#{member_id},'회원가입축하쿠폰','3000원 할인','할인',ADD_MONTHS(sysdate, 1),'사용가능','first_sign_up_coupon',3000) 
	</insert>
	 
	<insert id = "writePoint" parameterType = "String">
		insert into point values(#{member_id},sysdate,'회원가입축하적립금',ADD_MONTHS(sysdate, 1),2000,'회원가입적립금','first_sign_up_Point')
	</insert> 

	<!-- 리뷰 -->														
	<select id = "getMyReviewList" parameterType="String" resultType="mypageReviewListDTO">
		select review_id, review_subject, review_content, review_image, review_user_id, review_date, item_id, item_name from review 
		join item using(item_id)
		where review_user_id=#{id}
	</select>
	
	<!-- 찜한 물건 -->
	<insert id = "goPickItem" parameterType = "java.util.Map">	
		insert into pickItem values(#{id},#{item_image},#{seller_name},#{item_name},#{item_price},#{item_id})
	</insert>
	
	<select id = "getMypagePickItem" resultType = "mypagePickItemDTO" parameterType="String">
		select * from pickItem where pick_item_user_id = #{id}
	</select>
	
	<select id = "existItem" resultType = "Integer" parameterType = "java.util.Map">
		select count(*) from pickItem where pick_item_id = #{item_id} and pick_item_user_id = #{id} 
	</select>	
	
	<delete id="deleteChoicePickItem" parameterType = "java.util.Map">
		delete from pickItem where pick_item_user_id in (select pick_item_user_id from pickItem where pick_item_user_id = #{id}) and pick_item_id in #{check}
	</delete>
	
	<delete id="deletePickItem" parameterType = "java.util.Map">
		delete from pickItem where pick_item_user_id in (select pick_item_user_id from pickItem where pick_item_user_id = #{id}) and pick_item_id in #{deleteId}
	</delete>
	
	<!-- 찜한 판매자 -->
	<select id="getMypagePickSellerList" parameterType="String" resultType="mypagePickSellerDTO" >
		select * from pickSeller where pick_seller_user_id = #{memberId}
	</select>
	
	<insert id="mypagePickSellerAdd" parameterType="java.util.Map">
		insert into pickSeller values(#{pick_seller_user_id}, #{pick_seller_main_img}, #{pick_seller_name}, #{pick_seller_id})
	</insert>
	
	<delete id="deletePickSeller" parameterType = "java.util.Map">
		delete from pickseller where pick_seller_user_id in 
		(select pick_seller_user_id from pickseller where pick_seller_user_id = #{id}) and pick_seller_id in #{deleteId}
	</delete>

	<delete id="deleteChoicePickSeller" parameterType = "java.util.Map">
		delete from pickseller where pick_seller_user_id in 
		(select pick_seller_user_id from pickseller where pick_seller_user_id = #{id}) and pick_seller_id in #{check}
	</delete>
	

	<!-- 구매내역 -->
	<select id = "getMypageOrderList" resultType = "orderListDTO" parameterType="String">
		select order_id, order_item_main_image, order_item_id, order_user_id, order_state, order_total_price, order_date from
		(
			select order_id, order_item_main_image, order_item_id, order_user_id, order_state, order_total_price, order_date,
    		row_number() over (partition by order_id order by order_item_main_image desc) rn
    		from purchase
		)
		where rn = 1 and order_user_id = #{id}
	</select>
	
	<select id = "getMypageOrder" resultType = "orderDTO" parameterType="java.util.Map">
		select distinct(order_id), order_state, order_before_price, order_coupon, order_point, order_total_price, order_pay, order_user_id,
		order_user_name, order_date, order_name, order_phone, order_addr1, order_addr2, order_ps from purchase where order_id = #{order_id} and order_user_id = #{id}
	</select>
	
	<select id = "getMypageOrderImage" resultType = "orderImageDTO" parameterType="java.util.Map">
		select order_id, order_seller_name, order_seller_item, order_item_main_image, order_item_price, order_item_qty, order_state, order_item_id from purchase where order_id = #{order_id} and order_user_id = #{id}
	</select>
	
	<select id = "getMypageOrderYearList" resultType = "orderListDTO" parameterType="java.util.Map">
			select order_id, order_item_main_image, order_item_id, order_user_id, order_state, order_total_price, order_date from
		(
			select order_id, order_item_main_image, order_item_id, order_user_id, order_state, order_total_price, order_date,
    		row_number() over (partition by order_id order by order_item_main_image desc) rn
    		from purchase
		)
		where rn = 1 and order_user_id = #{id} and to_char(order_date,'YYYY') = #{year}
	</select>
	
	<select id = "getOrderListTotalA" resultType = "int">
		select count(*) from purchase
	</select>
	
	<select id="getMyQnaList" parameterType="String" resultType="informationQnADTO">
		select * from qnaboard where INFOQNA_USERID=#{id}
	</select>
	
	
</mapper>